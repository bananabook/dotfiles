#
# wm independent hotkeys
#

# terminal emulator
#super + Return
super + c
	gnome-terminal

super + alt + c
  urxvt

# weblinks
super +b; {c, r, f, w, m}
	firefox {\
	https://moodle.rwth-aachen.de/course/view.php?id=12679&section=1#tabs-tree-start ,\
	https://moodle.rwth-aachen.de/course/view.php?id=12677 ,\
	https://feedly.com/i/my ,\
	https://web.whatsapp.com/ ,\
	https://mail.google.com/mail/u/0/#inbox}


# media control
super + y
  playerctl play-pause

#super + {_,shift +}Return
super + {_,shift +}c
	{gnome-terminal, bspc rule -a \* -o state=floating && gnome-terminal}
super + {_,shift +} alt +c
	{urxvt, bspc rule -a \* -o state=floating && urxvt}

# firefox
super + f
	firefox
super + alt + f
	firefox --private-window

# program launcher
super + ctrl + @space
	dmenu_run

super + shift + @space
	rofi -show window -m -1 -theme ~/.config/rofi/example.rasi

super + alt + @space
	rofi -show window -m -1 -theme ~/.config/rofi/example.rasi

super + @space
  rofi -show drun -m -1 -theme ~/.config/rofi/example.rasi


# close and kill
super + {_,shift + }x
	bspc node -{c,k}


#
# state/flags
#

# set the window state
super + {t,shift + t,z, shift + z}
	bspc node -t {tiled,pseudo_tiled,floating, fullscreen}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

super + {_,shift + }{a,s,w,d}
	bspc node -{f,s} {west,south,north,east}

# multi monitor commands
super + ctrl + {_,alt +} Tab
	bspc monitor -{f,d} next 

# mark and swap marked
super + period
	bspc node -g marked=on

super + minus
	bspc node -g marked=off

super + shift + period
	bspc node any.marked -g marked=off;\ 
	bspc node any.marked -g marked=off 

super + g
	bspc node -s any.marked.!focused 
super + shift + g
	bspc node -s any.marked.!focused  --follow

super + alt + g
	bspc node -f any.marked.!focused 

# focus the next/previous node in the current desktop
super + {_,shift + }Tab
	bspc node -f {next,prev}.local.!floating
super + {_,shift + } alt + Tab
	bspc node -f {next,prev}.local.floating

# focus the next/previous desktop in the current monitor
super + {q,e}
	bspc desktop -f {prev,next}.local

# alternate between the tiled and monocle layout
super + alt + y
   bspc desktop -l next

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#super + {_,shift + }{n,m}
#	bspc {desktop -f,node -d} {prev,next}.local

super + {_,shift + }{q,e}
	bspc {desktop -f,node -d} {prev,next}.local
#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

super + alt + {a,s,w,d}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

super + alt + shift + {a,s,w,d}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + ctrl + {h,j,k,l}
	bspc node -v {-20 0,0 20,0 -20,20 0}
super + ctrl + {a,s,w,d}
	bspc node -v {-20 0,0 20,0 -20,20 0}

super + alt + ctrl + {h,j,k,l}
	bspc node -v {-120 0,0 120,0 -120,120 0}
super + alt + ctrl + {a,s,w,d}
	bspc node -v {-120 0,0 120,0 -120,120 0}


# style
super + alt + p
	export border_width=$(bspc config border_width);\
	let border_width+=1;\
	bspc config border_width $border_width

super + alt + o
	export border_width=$(bspc config border_width);\
	let border_width-=1;\
	bspc config border_width $border_width

super + p
	export window_gap=$(bspc config window_gap);\
	let window_gap+=1;\
	bspc config window_gap $window_gap

super + o
	export window_gap=$(bspc config window_gap);\
	let window_gap-=1;\
	bspc config window_gap $window_gap

super + alt + ctrl + o
	bspc config border_width 0

super + alt + ctrl + p
	bspc config border_width 2

super + ctrl + o
	bspc config window_gap  0

super + ctrl + p
	bspc config window_gap  3

# rotate
super +  r
	bspc node @parent -R 90

super + shift + r
	bspc node @/ -R 90

# modes
super + u
	bspc node -g sticky=on
super + shift + u
	bspc node -g sticky=off
#super + i
#	bspc node -g private
super + comma
	bspc node -g locked=on
super + shift + comma
	bspc node -g locked=off

# rules
super + alt + z
	bspc rule -a \* state=floating

super + alt + shift + z
	bspc rule -r tail
#super + alt + shift + z
#	bspc rule -a \* state=tiled

#super + alt +{_, shift +}  z
#	bspc rule -a \* state={floating=on, floating=off}

#super + alt +{_, shift +}  z
#	bspc rule {-a, r} \* state=floating

# screenshot
super + alt + v
  scrot -s -e 'mv $f ~/Pictures'

super + v
	scrot -e 'mv $f ~/Pictures'

## image
#super + b
#  feh ~/Pictures/wp/mountain.jpg

# hiding
super + i
	bspc node -g hidden=on
super + shift + i
	bspc node any.hidden.local -g hidden=off
super + shift + ctrl + i
	bspc node {,$(bspc query -N -n .hidden | head -n1)} -g hidden=off

#Brightness Control
super + ctrl + {1,2,3,4,5,6,7,8,9,0}
	xbacklight -set {[1, 12, 23, 34, 45, 56, 67, 78, 89, 100]
  }
super + ctrl + alt + {1,2,3,4,5,6,7,8,9,0}
	xrandr --output HDMI1 --brightness {0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1}
  }

#xrandr --output eDP-1 --brightness {0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1}

#Volume Control
XF86AudioLowerVolume
	amixer set Master 5%-
XF86AudioRaiseVolume
	amixer set Master 5%+
super + alt + {1,2,3,4,5,6,7,8,9,0}
	amixer set Master {10%,20%,30%,40%,50%,60%,70%,80%,90%,100%}
#super + alt + space
super + alt + F1
	amixer set Master 0%

# make sxhkd reload its configuration files:
super + F1
	pkill -USR1 -x sxhkd

super + F2
	playerctl pause ;\
	xdg-screensaver lock

#
# bspwm hotkeys
#

# quit/restart bspwm
super + {F4,F5}
	bspc {quit,wm -r}
